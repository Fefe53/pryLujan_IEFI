<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>